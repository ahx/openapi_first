openapi: "3.0.2"
info:
  version: 1.0.0
  title: Parameter validation
servers:
  - url: http://example.com
tags:
  - name: search
    description: Search
paths:
  /search:
    get:
      summary: Search for pets
      operationId: search
      tags:
        - search
      parameters:
        - name: term
          in: query
          description: The term you want to search for
          required: true
          schema:
            type: string
        - $ref: './components/parameters/filter.yaml'
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          schema:
            type: integer
            format: int32
            default: 10
        - name: weight
          in: query
          description: An arbitrary parameter to test conversion to floats
          required: false
          schema:
            type: number
        - name: starred
          in: query
          description: An arbitrary parameter to test conversion to booleans
          required: false
          schema:
            type: boolean
        - name: birthdate
          in: query
          description: Search for a pet born on this date
          required: false
          schema:
            type: string
            format: date
        - name: date_time
          in: query
          description: An arbitrary parameter to test conversion to date-time
          required: false
          schema:
            type: string
            format: date-time
        - name: time
          in: query
          description: An arbitrary parameter to test conversion to time
          required: false
          schema:
            type: string
            format: time
        - name: include
          in: query
          description: Relations you want to include
          required: false
          schema:
            type: string
            pattern: (parents|children)+(,(parents|children))*
      responses:
        "200":
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /info:
    get:
      summary: Get some info
      operationId: info
      tags:
        - search
      responses:
        "200":
          description: ok
  /with-default-query-param:
    get:
      parameters:
        - name: has_default
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: ok
  /with-default-query-nullable:
    get:
      parameters:
        - name: has_default
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: ok

components:
  schemas:
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Pet:
      $ref: "./components/schemas/pet.yaml#/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

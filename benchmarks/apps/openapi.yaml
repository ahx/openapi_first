openapi: 3.0.0
info:
  title: "API"
  version: "1.0.0"
  contact:
    name: Contact Name
    email: contact@example.com
    url: https://example.com/
tags:
  - name: Metadata
    description: Metadata related requests
paths:
  /hello/{id}:
    parameters:
      - name: id
        description: ID of the thing to get
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: find_thing
      description: Get one thing
      tags: ["Metadata"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [hello, id]
                properties:
                  hello:
                    type: string
                  id:
                    type: string
  /hello:
    get:
      operationId: find_things
      description: Get multiple things
      tags: ["Metadata"]
      parameters:
        - name: filter
          description: filter things
          in: query
          required: false
          schema:
            type: object
            required: [id]
            properties:
              id:
                type: string
                description: Comma separated list of thing-IDs

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required: [hello]
                  properties:
                    hello:
                      type: string
        default:
          description: Error response

    post:
      operationId: create_thing
      description: Create a thing
      tags: ["Metadata"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - say
              properties:
                say:
                  type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [hello]
                properties:
                  hello:
                    type: string
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: find_pets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: create_pet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{id}:
    parameters:
      - name: id
        in: path
        description: ID of pet to fetch
        required: true
        schema:
          type: integer
          format: int64
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find_pet
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: delete_pet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a pet
      operationId: update_pet
      requestBody:
        description: Changes
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new user
      responses:
        "201":
          description: User created
  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User updated
    delete:
      summary: Delete a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User deleted
  /products:
    get:
      summary: Get all products
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new product
      responses:
        "201":
          description: Product created
  /products/{productId}:
    get:
      summary: Get a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product updated
    delete:
      summary: Delete a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Product deleted
  /orders:
    get:
      summary: Get all orders
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new order
      responses:
        "201":
          description: Order created
  /orders/{orderId}:
    get:
      summary: Get an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order updated
    delete:
      summary: Delete an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Order deleted
  /customers:
    get:
      summary: Get all customers
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new customer
      responses:
        "201":
          description: Customer created
  /customers/{customerId}:
    get:
      summary: Get a customer by ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a customer by ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Customer updated
    delete:
      summary: Delete a customer by ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Customer deleted
  /categories:
    get:
      summary: Get all categories
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new category
      responses:
        "201":
          description: Category created
  /categories/{categoryId}:
    get:
      summary: Get a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Category updated
    delete:
      summary: Delete a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Category deleted
  /reviews:
    get:
      summary: Get all reviews
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new review
      responses:
        "201":
          description: Review created
  /reviews/{reviewId}:
    get:
      summary: Get a review by ID
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a review by ID
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Review updated
    delete:
      summary: Delete a review by ID
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Review deleted
  /invoices:
    get:
      summary: Get all invoices
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new invoice
      responses:
        "201":
          description: Invoice created
  /invoices/{invoiceId}:
    get:
      summary: Get an invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update an invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice updated
    delete:
      summary: Delete an invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Invoice deleted
  /suppliers:
    get:
      summary: Get all suppliers
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new supplier
      responses:
        "201":
          description: Supplier created
  /suppliers/{supplierId}:
    get:
      summary: Get a supplier by ID
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a supplier by ID
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Supplier updated
    delete:
      summary: Delete a supplier by ID
      parameters:
        - name: supplierId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Supplier deleted
  /payments:
    get:
      summary: Get all payments
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new payment
      responses:
        "201":
          description: Payment created
  /payments/{paymentId}:
    get:
      summary: Get a payment by ID
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a payment by ID
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Payment updated
    delete:
      summary: Delete a payment by ID
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Payment deleted
  /shipments:
    get:
      summary: Get all shipments
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new shipment
      responses:
        "201":
          description: Shipment created
  /shipments/{shipmentId}:
    get:
      summary: Get a shipment by ID
      parameters:
        - name: shipmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a shipment by ID
      parameters:
        - name: shipmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Shipment updated
    delete:
      summary: Delete a shipment by ID
      parameters:
        - name: shipmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Shipment deleted
  /warehouses:
    get:
      summary: Get all warehouses
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new warehouse
      responses:
        "201":
          description: Warehouse created
  /warehouses/{warehouseId}:
    get:
      summary: Get a warehouse by ID
      parameters:
        - name: warehouseId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a warehouse by ID
      parameters:
        - name: warehouseId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Warehouse updated
    delete:
      summary: Delete a warehouse by ID
      parameters:
        - name: warehouseId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Warehouse deleted
  /branches:
    get:
      summary: Get all branches
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new branch
      responses:
        "201":
          description: Branch created
  /branches/{branchId}:
    get:
      summary: Get a branch by ID
      parameters:
        - name: branchId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a branch by ID
      parameters:
        - name: branchId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Branch updated
    delete:
      summary: Delete a branch by ID
      parameters:
        - name: branchId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Branch deleted
  /stores:
    get:
      summary: Get all stores
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new store
      responses:
        "201":
          description: Store created
  /stores/{storeId}:
    get:
      summary: Get a store by ID
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a store by ID
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Store updated
    delete:
      summary: Delete a store by ID
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Store deleted
  /returns:
    get:
      summary: Get all returns
      responses:
        "200":
          description: Successful response
    post:
      summary: Create a new return
      responses:
        "201":
          description: Return created
  /returns/{returnId}:
    get:
      summary: Get a return by ID
      parameters:
        - name: returnId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
    put:
      summary: Update a return by ID
      parameters:
        - name: returnId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Return updated
    delete:
      summary: Delete a return by ID
      parameters:
        - name: returnId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Return deleted
  /logs:
    get:
      summary: Get all logs
      responses:
        "200":
          description: Successful response
  /logs/{logId}:
    get:
      summary: Get a log by ID
      parameters:
        - name: logId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
  /reports:
    get:
      summary: Get all reports
      responses:
        "200":
          description: Successful response
  /reports/{reportId}:
    get:
      summary: Get a report by ID
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
  /notifications:
    get:
      summary: Get all notifications
      responses:
        "200":
          description: Successful response
  /notifications/{notificationId}:
    get:
      summary: Get a notification by ID
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response

components:
  schemas:
    Pet:
      allOf:
        - $ref: "#/components/schemas/NewPet"
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64

    NewPet:
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - pet
            - plant
        attributes:
          additionalProperties: false
          type: object
          required: [name]
          properties:
            name:
              type: string

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
